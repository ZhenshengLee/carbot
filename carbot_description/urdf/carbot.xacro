<?xml version="1.0"?>
<robot name="carbot" xmlns:xacro="http://wiki.ros.org/xacro">

<xacro:property name="car_length" value="1.4"/>
<xacro:property name="car_width" value="1.0"/>
<xacro:property name="car_height" value="0.3"/>
<xacro:property name="wheel_width" value="0.2"/>
<!-- TODO(lwalter) pass these in as args -->
<!-- turning to left -->
<xacro:property name="min_steer" value="-0.7"/>
<!-- turning to right -->
<xacro:property name="max_steer" value="0.7"/>

<xacro:include filename="$(find carbot_description)/urdf/carbot.gazebo"/>

<!-- don't use macro names that are the same as other key names
  like 'box', 'cylinder', etc. otherwise get Invalid parameter "size"
-->
<xacro:macro name="block" params="name length width height mass">
  <link name="${name}">
     <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${length} ${width} ${height}"/>
      </geometry>
      <material name="${name}_gray">
        <color rgba="0.5 0.5 0.5 1"/>
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${length} ${width} ${height}"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <mass value="${mass}"/>
      <inertia
          ixx="${mass / 12.0 * (width * width + height * height)}" ixy="0.0" ixz="0.0"
          iyy="${mass / 12.0 * (length * length + height * height)}" iyz="0.0"
          izz="${mass / 12.0 * (length * length + width * width)}" />
    </inertial>
  </link>
</xacro:macro>

<!-- a wheel that rotates around the y axis, rolls forward toward the x axis -->
<!--origin xyz="${length/2} ${width/2} ${height/2}" /-->
<xacro:macro name="wheel" params="name width height mass">
  <link name="${name}">
    <visual>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      <geometry>
        <cylinder length="${width}" radius="${height/2}"/>
      </geometry>
      <material name="${name}_black">
        <color rgba="0.2 0.2 0.2 1"/>
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      <geometry>
        <cylinder length="${width}" radius="${height/2}"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      <mass value="${mass}"/>
      <inertia
          ixx="${mass / 12.0 * (3/4 * height * height + width * width)}" ixy="0.0" ixz="0.0"
          iyy="${mass / 12.0 * (3/4 * height * height + width * width)}" iyz="0.0"
          izz="${mass / 12.0 * (3/4 * height * height + width * width)}"/>
    </inertial>
  </link>
</xacro:macro>

  <link name="base_link"/>
  <xacro:block name="chassis_link" length="${car_length}"
      width="${car_width}" height="${car_height}" mass="1.0"/>
  <joint name="chassis_joint" type="fixed">
    <parent link="base_link"/>
    <child link="chassis_link"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>


  <xacro:block name="test_link" length="${car_length/2.0}"
      width="${car_width}" height="${car_height}" mass="0.5"/>
  <joint name="test_joint" type="fixed">
    <parent link="base_link"/>
    <child link="test_link"/>
    <origin xyz="0 0 ${car_height}" rpy="0 0 0"/>
  </joint>

  <xacro:block name="front_axle" length="${car_width/8.0}"
      width="${car_width}" height="${car_width/8.0}" mass="0.1"/>
  <joint name="front_axle_joint" type="fixed">
    <parent link="base_link"/>
    <child link="front_axle"/>
    <origin xyz="${car_length/2 - 0.05} 0 0" rpy="0 0 0"/>
  </joint>

  <!-- this is the virtual joint that represents the front of the bicycle
    in the bicycle model, it will be controlled and the left and right
    actual joints will respond to it appropriately to maintain a steer center
    -->
  <link name="lead_steer"/>
  <joint name="lead_steer_joint" type="revolute">
    <!-- TODO(lwalter) may want to put this at base_link instead- but 
      maybe thinking about moving in terms of where to put the front
      bumper makes more sense than where to put the center of the vehicle?
      -->
    <!--parent link="base_link"/-->
    <parent link="front_axle"/>
    <child link="lead_steer"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <axis xyz="0 0 -1"/>
    <limit effort="1000.0" upper="${max_steer}" lower="${min_steer}" velocity="0.5"/>
  </joint>
  <!-- virtual wheel that will represent the desired velocity
    of the vehicle (so need radius encoded in it also) -->
  <link name="wheel_lead"/>
  <joint name="wheel_lead_axle" type="continuous">
    <parent link="lead_steer"/>
    <child link="wheel_lead"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
    <limit effort="1000.0" velocity="0.5"/>
  </joint>

  <!-- front left -->
  <xacro:block name="front_left_steer" length="${car_width/8.0}"
      width="${car_width/8.0}" height="${car_width/8.0}" mass="0.1"/>
  <joint name="front_left_steer_joint" type="revolute">
    <parent link="front_axle"/>
    <child link="front_left_steer"/>
    <origin xyz="0 ${car_width/2 + wheel_width/2 + 0.1} 0" rpy="0 0 0"/>
    <axis xyz="0 0 -1"/>
    <limit effort="1000.0" upper="${max_steer}" lower="${min_steer}" velocity="0.5"/>
  </joint>

  <xacro:wheel name="wheel_front_left" width="${wheel_width}" height="0.4" mass="0.2"/>
  <joint name="wheel_front_left_axle" type="continuous">
    <parent link="front_left_steer"/>
    <child link="wheel_front_left"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
    <limit effort="1000.0" velocity="0.5"/>
  </joint>

  <!-- front right -->
  <xacro:block name="front_right_steer" length="${car_width/8.0}"
      width="${car_width/8.0}" height="${car_width/8.0}" mass="0.1"/>
  <joint name="front_right_steer_joint" type="revolute">
    <parent link="front_axle"/>
    <child link="front_right_steer"/>
    <origin xyz="0 ${-car_width/2 - wheel_width/2 - 0.1} 0" rpy="0 0 0"/>
    <axis xyz="0 0 -1"/>
    <limit effort="1000.0" upper="${max_steer}" lower="${min_steer}" velocity="0.5"/>
  </joint>

  <xacro:wheel name="wheel_front_right" width="${wheel_width}" height="0.4" mass="0.2"/>
  <joint name="wheel_front_right_axle" type="continuous">
    <parent link="front_right_steer"/>
    <child link="wheel_front_right"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
    <limit effort="1000.0" velocity="0.5"/>
  </joint>

  <xacro:block name="back_axle" length="${car_width/8.0}"
      width="${car_width}" height="${car_width/8.0}" mass="0.1"/>
  <joint name="back_axle_joint" type="fixed">
    <parent link="base_link"/>
    <child link="back_axle"/>
    <origin xyz="${-car_length/2 + 0.05} 0 0" rpy="0 0 0"/>
  </joint>

  <!-- back left -->
  <xacro:block name="back_left" length="${car_width/8.0}"
      width="${car_width/8.0}" height="${car_width/8.0}" mass="0.1"/>
  <joint name="back_left_axle" type="fixed">
    <parent link="back_axle"/>
    <child link="back_left"/>
    <origin xyz="0 ${car_width/2 + wheel_width/2 + 0.1} 0" rpy="0 0 0"/>
  </joint>
  <xacro:wheel name="wheel_back_left" width="${wheel_width}" height="0.4" mass="0.2"/>
  <joint name="wheel_back_left_axle" type="continuous">
    <parent link="back_left"/>
    <child link="wheel_back_left"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
    <limit effort="1000.0" velocity="0.5"/>
  </joint>

  <xacro:block name="back_right" length="${car_width/8.0}"
      width="${car_width/8.0}" height="${car_width/8.0}" mass="0.1"/>
  <joint name="back_right_axle" type="fixed">
    <parent link="back_axle"/>
    <child link="back_right"/>
    <origin xyz="0 ${-1 * (car_width/2 + wheel_width/2 + 0.1)} 0" rpy="0 0 0"/>
  </joint>
  <xacro:wheel name="wheel_back_right" width="${wheel_width}" height="0.4" mass="0.2"/>
  <joint name="wheel_back_right_axle" type="continuous">
    <parent link="back_right"/>
    <child link="wheel_back_right"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
    <limit effort="1000.0" velocity="0.5"/>
  </joint>

</robot>
